# specify your model output location
output_dir: MCGLPPI/downstream_files/MANYDC/scratch/downstream_outputs

dataset:
  class: MANYDCDataset

  # the path for storing the downstream source data
  data_path: MCGLPPI/downstream_files/MANYDC/m2_manydc_data/

  # the path for storing the output processed (model input) pickle file
  output_path: MCGLPPI/downstream_files/MANYDC/

  # the path for storing the index of dataset splitting
  index_path: MCGLPPI/downstream_files/MANYDC/MANYDC_index_seed512.json

  # the path for storing all label informatipn of current dataset
  label_path: MCGLPPI/downstream_files/MANYDC/MANYDC.csv
  
  # indicating current used (model input) pickle file (creating it if it does not exist)
  pickle_name: cg2_manydc.pkl.gz

  cropping_threshold: 10 
  contact_threshold: 8.5 # threshold for determining contact residues based on inter-BB distance
  # currently no transform functions are needed, the node and edge features can be generated in task.forward and CG22_GraphConstruction separately

task:
  class: MANYDC
  angle_enhance: True
  # normalization: False # label normalization is closed for classification tasks
  num_mlp_layer: 3
  mlp_batch_norm: False 
  mlp_dropout: 0 

  model: 
    class: CG22_GearNetIEConv
    input_dim: 25 # bead type number (17) + 4*2 angle features (angle_enhance=True)
    # input_dim: 17 # bead type number
    
    hidden_dims: [256, 256, 256, 256, 256, 256]
    batch_norm: True
    concat_hidden: True
    short_cut: True
    readout: sum 
    # num_relation: 1 # original relation number (only containing radius edges)
    num_relation: 7 # across_res_mask: +1, cg_edge_enhance: +5 (maximum: 7)
    
    edge_input_dim: 53 # cg22_gearnet: 46 + num_relation (maximum: 53)
    # edge_input_dim: 59 # gearnet: 52 + num_relation
    num_angle_bin: 8
    # extra hyperparameter for GearNetIEConv-based models:
    embedding_dim: 256 # extra linear embedding layer
    # layer_norm: True
    # dropout: 0.2
    # use_ieconv: True

  graph_construction_model:
    class: CG22_GraphConstruction
    edge_layers:
      # - class: SpatialEdge
        # radius: 4.5
        # min_distance: 0
      - class: AdvSpatialEdge
        radius: 5 # empirically, martini2.2 based edge cutoff can also be tried starting from 4A~5A
        min_distance: 0
        across_res_mask: True # distinguish whether bead nodes are across two residues or not
        cg_edge_enhance: True # enhance the radius edge with CG defined edges
        cg_edge_reduction: False # whether to remove the duplicate CG edges on the top of the radius edges (valid if cg_edge_enhance=True)
    edge_feature: cg22_gearnet # input attribute of initialization function of CG22_GraphConstruction
    # edge_feature: gearnet

optimizer:
  class: Adam
  lr: 1.0e-4

# scheduler:
  # class: ReduceLROnPlateau
  # mode: max
  # factor: 0.6
  # patience: 5

engine:
  gpus: [0]
  batch_size: 64 # default: 64
  num_worker: 0 

# comment out the 'model_checkpoint' argument to enable training-from-scratch
# model_checkpoint: {{ ckpt }}

train:
  model_save_mode: direct # direct/val, if set to direct (only save the model in the last specified epoch), early_stop will not work
  num_epoch: 30
  early_stop: 20

  # the specified metric controlling the best model saved based on best-val
  eval_metric: auprc [interface_class]

# extra information to be attached to the name of the output model
extra: 0
